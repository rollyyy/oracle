1) EMP와 DEPT TABLE을 JOIN하여 부서 번호,  부서명,  이름, 급여를 출력하라.

SELECT D.DEPTNO, D.DNAME, E.ENAME, E.SAL
  FROM EMP E, DEPT D
 WHERE E.DEPTNO = D.DEPTNO

2)이름이 'ALLEN'인 사원의 부서명을 출력하라.

SELECT E.ENAME, D.DNAME
  FROM EMP E, DEPT D
 WHERE E.DEPTNO = D.DEPTNO
   AND E.ENAME = 'ALLEN'
 

3)DEPT Table에 있는 모든 부서를 출력하고, EMP Table에 있는 DATA와 JOIN하여 모든 사원의 이름, 부서번호, 부서명, 급여를 출력하라.

SELECT E.ENAME, D.DEPTNO, D.DNAME, E.SAL
  FROM EMP E, DEPT D
 WHERE E.DEPTNO(+) = D.DEPTNO

4)EMP Table에 있는 EMPNO와 MGR을 이용하여 서로의 관계를 다음과 같이 출력하라.
SMITH의 매니저는 FORD이다.

SELECT E.ENAME || '의 매니저는' || M.ENAME || '이다.'
  FROM EMP E, EMP M
 WHERE E.MGR = M.EMPNO
   AND E.ENAME = 'SMITH'

5)'ALLEN'의 직무와 같은 사람의 이름, 부서명, 급여, 직무를 출력하라.

SELECT E.ENAME, D.DNAME, E.SAL, E.JOB
  FROM EMP E, DEPT D
 WHERE E.DEPTNO = D.DEPTNO
   AND JOB = (SELECT JOB
                FROM EMP
      WHERE ENAME = 'ALLEN')
      
6)'JONES'가 속해있는 부서의 모든사람의 사원번호, 이름, 입사일, 급여를 출력하라.

SELECT EMPNO, ENAME, HIREDATE, SAL
  FROM EMP
 WHERE DEPTNO = (SELECT DEPTNO
                   FROM EMP
      WHERE ENAME = 'JONES')

 
7)전체 사원의 평균임금보다 많은 사원의 사원번호, 이름, 부서명, 입사일, 지역, 급여를출력하라.

SELECT E.EMPNO, E.ENAME, D.DNAME, E.HIREDATE, D.LOC, E.SAL
  FROM EMP E, DEPT D
 WHERE E.DEPTNO = D.DEPTNO
   AND SAL > (SELECT AVG(SAL)
                FROM EMP)

8)10번 부서의 사람들중에서 20번 부서의 사원과 같은 업무를 하는 사원의 사원번호, 이름, 부서명, 입사일, 지역을 출력하라.

SELECT E.EMPNO,
       E.ENAME,
    D.DNAME,
    E.HIREDATE,
    D.LOC
  FROM EMP E, DEPT D
 WHERE E.DEPTNO = D.DEPTNO
   AND E.DEPTNO = 10
   AND E.JOB IN (SELECT JOB
                 FROM EMP
    WHERE DEPTNO = 20)

9)10번 부서 중에서 30번 부서에는 없는 임무를 하는 사원의 사원번호, 이름, 부서명, 입사일, 지역을 출력하라.

SELECT E.EMPNO, E.ENAME, D.DNAME, E.HIREDATE, D.LOC
  FROM EMP E, DEPT D
 WHERE E.DEPTNO = D.DEPTNO
   AND E.DEPTNO = 10
   AND E.JOB NOT IN (SELECT JOB
                       FROM EMP
       WHERE DEPTNO = 30)
       
       
10)10번 부서와 같은 일을 하는 사원의 사원번호, 이름, 부서명, 지역, 급여를 급여가 많은 순으로 출력하라.

SELECT E.EMPNO, E.ENAME, D.DNAME, D.LOC, E.SAL
  FROM EMP E, DEPT D
 WHERE E.DEPTNO = D.DEPTNO
   AND E.DEPTNO != 10
   AND E.JOB IN (SELECT JOB
                 FROM EMP
    WHERE DEPTNO = 10)
 ORDER BY E.SAL DESC

11)'MARTIN'이나 'SCOTT'의 급여와 같은 사원의 사원번호, 이름, 급여를 출력하라.

SELECT EMPNO, ENAME, SAL
  FROM EMP
 WHERE SAL IN (SELECT SAL
                 FROM EMP
    WHERE ENAME IN ('MARTIN', 'SCOTT'))
    
 12)급여가 30번 부서의 최고 급여보다 높은 사원의 사원번호, 이름, 급여를 출력하라.

SELECT EMPNO, ENAME, SAL
  FROM EMP
 WHERE SAL > (SELECT MAX(SAL)
                FROM EMP
      WHERE DEPTNO = 30)
 

13)급여가 30번 부서의 최저 급여보다 높은 사원의 사원번호, 이름, 급여를 출력하라.

SELECT EMPNO, ENAME, SAL
  FROM EMP
 WHERE SAL > (SELECT MIN(SAL)
                FROM EMP
      WHERE DEPTNO = 30)
      
1) 10번 부서의 모든 사람들에게 급여의 13%를 보너스로 지불하기로 하였다. 이름, 급여,보너스금액,부서번호를 출력하라.

select ename, sal, case when deptno = 10 then sal*0.13 else 0 end as bonus
from emp
where deptno = 10
order by bonus desc

2) 1990년 1월 1일 현재, 100일 10시간 이상 근무한 사람을 검색하시오.

SELECT employee_id, last_name FROM employees
WHERE hire_date + TO_DSINTERVAL('100 10:00:00') <= DATE '1990-01-01'

3) 1990년 1월 1일 현재, 100일 10시간 이상 근무한 사람을 검색하시오.

SELECT employee_id, last_name FROM employees
WHERE hire_date + TO_DSINTERVAL('100 10:00:00') <= DATE '1990-01-01'

4) 모든 사원의 이름, 부서번호, 부서이름을 표시하시오.(emp,dept)

SELECT  e.ename, e.deptno, d.dname
FROM emp e, dept d
WHERE e.deptno = d.deptno;


5) 업무가 MANAGER인 사원의 정보를 이름,업무,부서명,근무지 순으로 출력하시오.(emp,dept)

SELECT  e.ename, e.job, d.dname, d.loc
FROM emp e, dept d
WHERE e.deptno = d.deptno
AND e.job = 'MANAGER';

6) 커미션을 받고 급여가 1,600이상인 사원의 사원이름,부서명,근무지를 출력하시오

SELECT  e.ename, d.dname, d.loc
FROM emp e, dept d
WHERE e.deptno = d.deptno
AND comm IS NOT NULL
AND comm <> 0
AND sal >= 1600;


7) 근무지가 CHICAGO인 모든 사원의 이름,업무,부서번호 및 부서이름을 표시하시오.

SELECT  e.ename, e.job,d.deptno, d.dname
FROM emp e, dept d
WHERE e.deptno = d.deptno
AND d.loc = 'CHICAGO'; 

8) 근무지별로 근무하는 사원의 수가 5명 이하인 경우, 인원이 적은 도시순으로 정렬하시오.(근무 인원이 0명인 곳도 표시)

SELECT  d.loc, COUNT(e.empno)
FROM emp e, dept d
WHERE e.deptno(+) = d.deptno
GROUP BY d.loc
HAVING COUNT(e.empno) <= 5
ORDER BY COUNT(e.empno) ASC ;


9) 사원의 이름 및 사원 번호를 관리자의 이름과 관리자 번호와 함께 표시하고  각각의 열 레이블은 employee, emp#, manager, mgr#로 지정하시오.

SELECT e.ename employee, e.empno "emp#" , m.ename manager, m.empno "mgr#"
FROM emp e, emp m
WHERE e.mgr = m.empno;

10) 관리자보다 먼저 입사한 모든 사원의 이름 및 입사일을 관리자의 이름 및 입사일과 함께 표시하고 열 레이블을 각각 employee, emp hired, manager, mgr hired로 지정

SELECT e.ename employee, e.hiredate "emp hired" , m.ename manager, m.hiredate "mgr hired"
FROM emp e, emp m
WHERE e.mgr = m.empno
AND e.hiredate < m.hiredate;

11) 사원의 이름 및 사원번호를 관리자의 이름과 관리자 번호와 함께 표시하고 각각의 열  레이블은 employee, emp#, manager, mgr#로 지정하는데 King을 포함하여 관리자가 없는 모든 사원을 표시하도록 하고 결과를 사원번호를 기준으로 정렬

SELECT e.ename employee, e.empno "emp#" , m.ename manager, m.empno "mgr#"
FROM emp e, emp m
WHERE e.mgr = m.empno(+)
ORDER BY e.empno ASC;

 --직책이 SALESMAN, ANALYST인 사람의 모든 정보를 출력하시오. ( or, like, in, any, some )
 select *
from emp
where job = 'SALESMAN' 
or job = 'ANALYST';

select *
from emp
where job like 'S%' 
or job like 'A%';

--1981년 5월 1일 ~ 1982년 2월 사이에 입사한 사원들의 모든 정보를 부서번호순(오름차순)으로 검색하시오. ( TO_DATE )

select *
from emp
where hiredate >= TO_DATE('19810501', 'yyyymmdd') 
and hiredate < TO_DATE('19820228', 'yyyymmdd')
order by deptno;

4. 직급이 SALESMAN 일 경우 급여 * 1.1, CLERK 일 경우 급여 * 1.3, MANAGER 일 경우 급여 * 1.5 를 하고 모든 정보를 출력하시오. ( DECODE )

select empno
     , job
     , ename
     , sal
     , decode(job, 'SALESMAN', sal*1.1, 'CLERK', sal*1.3, 'MANAGER', sal*1.5, sal) as 인상된급여 
from emp;

5. 모든 사원들에게 커미션을 200씩 추가하여 사원이름, 커미션 값을 출력하시오. ( nvl )

select ename
     , nvl(comm,0) + 200 
from emp;

6.  커미션을 가지고 있는 사원은 Y, 커미션이 NULL값인 사원은 N을 포함하여 사원이름과 커미션 값을 출력하시오.( nvl2 )

select ename
     , nvl2(comm, 'Y', 'N') 
from emp;
cs
 

7. 1981년 입사자들의 평균 임금을 출력하시오.

select AVG(sal)
from emp
where TO_CHAR(hiredate,'YYYY') = '1981';

8. 사원번호, 사원이름, 총 급여(SAL+COMM)을 출력하시오. 

select empno
     , ename
     , sal+nvl(comm,0)
from emp;

9. SALESMAN 의 커미션 평균을 출력하시오. ( group by )
 
--GROUP BY 함수 = 특정 컬럼을 기준으로 집계를 내는데에 사용한다.

--SELECT [그룹으로 묶은 컬럼명]
--     , [집계할 컬럼명]
--FROM [테이블명]
--GROUP BY [그룹으로 묶을 컬럼명]

select job
     , AVG(nvl(comm,0))
from emp
where job='SALESMAN'
group by job;

1. 사원수가 3명 이상인 부서명과 인원수를 출력하시오. ( group by, having )
select job
     , count(*)
from emp
group by job
having count(*) >= 3;

2. 직무 중 가장 적게 수입을 가지는 직무의 평균 월급을 출력하시오.

select min(AVG(sal)) 
from emp 
group by job;

3. 사원번호, 사원이름, 부서이름, 부서번호를 출력하시오. ( Join )

select emp.ename
     , emp.empno
     , dept.dname
     , dept.deptno
from emp
   , dept
where emp.deptno = dept.deptno;

4. 부서가 30이고, 급여가 1500이상인 사원의 이름, 급여, 부서명, 부서번호를 출력하시오. ( Join on )

select emp.ename
     , emp.sal
     , dept.dname
     , dept.deptno
from emp join dept
on emp.deptno = dept.deptno
where emp.deptno = 30
and sal >= 1500;

5. 사원수가 5명이 넘는 부서의 부서명과 사원수를 출력하시오.
 
select dept.dname
     , count(*)
from emp
   , dept
where emp.deptno = dept.deptno
group by emp.deptno
       , dept.dname
having count(*) >= 5;

6. ADAMS 사원이 근무하는 부서이름과 지역이름을 출력하시오.

select dept.dname
     , dept.loc
     , emp.ename
from emp
   , dept
where emp.deptno = dept.deptno
and emp.ename = 'ADAMS';

7. NEW YORK 이나 DALLAS 지역에 근무하는 사원들의 사원번호, 사원이름을 사원번호 순으로 검색하시오.

select e.empno
     , e.ename
from emp e
   , dept d
where e.deptno = d.deptno
and (d.loc = 'NEWYORK' or d.loc='DALLAS')
order by e.empno;

8.  부서번호 10번인 사원들의 사원번호, 사원이름, 월급을 출력하시오.

select empno, ename, sal
from emp
where deptno=10;
cs
 

9.  사원번호 7369인 사원 이름, 입사일, 부서번호를 출력하시오.

select ename as 사원이름, hiredate as 입사일, deptno as 부서번호
from emp
where empno=7369;

10. 사원번호 7300크고 7400 작은 사원 이름, 입사일, 부서번호를 출력하시오.

select ename as 사원이름, hiredate as 입사일, deptno as 부서번호
from emp
where empno > 7300 AND empno < 7400;

11.  EMP 모든 정보를 (사원번호 기준 내림차순으로) 검색하시오.
정렬

select *
from emp
order by empno desc;

12. 이름이 S로 시작하는 모든 사람의 사원번호와 이름을 출력하시오.

select *
from emp
order by empno desc;

13. 직속상관 사원번호가 없는 사원의 모든 정보를 검색하시오.

select *
from emp
where mgr is null;

14. 사원수가 3명 이상인 부서명과 인원수를 출력하시오. ( group by, having )

select job
     , count(*)
from emp
group by job
having count(*) >= 3;


15. 직무 중 가장 적게 수입을 가지는 직무의 평균 월급을 출력하시오.

select min(AVG(sal)) 
from emp 
group by job;

16. 사원번호, 사원이름, 부서이름, 부서번호를 출력하시오. ( Join )
-- 내부조인

select emp.ename
     , emp.empno
     , dept.dname
     , dept.deptno
from emp
   , dept
where emp.deptno = dept.deptno;
cs

--Natural 조인

select ename
     , empno
     , dname
     , deptno
from emp natural join dept;

17. 부서가 30이고, 급여가 1500이상인 사원의 이름, 급여, 부서명, 부서번호를 출력하시오. ( Join on )

select emp.ename
     , emp.sal
     , dept.dname
     , dept.deptno
from emp join dept
on emp.deptno = dept.deptno
where emp.deptno = 30
and sal >= 1500;
cs
 

18. 사원수가 5명이 넘는 부서의 부서명과 사원수를 출력하시오.
 
select dept.dname
     , count(*)
from emp
   , dept
where emp.deptno = dept.deptno
group by emp.deptno
       , dept.dname
having count(*) >= 5;

19. ADAMS 사원이 근무하는 부서이름과 지역이름을 출력하시오.

select dept.dname
     , dept.loc
     , emp.ename
from emp
   , dept
where emp.deptno = dept.deptno
and emp.ename = 'ADAMS';
