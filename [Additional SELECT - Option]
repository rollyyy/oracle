--SQL03_SELECT(Option)

-- 1번
-- 학생이름과 주소지를 표시하시오. 단, 출력 헤더는 "학생 이름",
-- "주소지"로 하고, 정렬은 이름으로 오름차순 표시하도록 한다.
SELECT 
       STUDENT_NAME AS "학생 이름"
     , STUDENT_ADDRESS AS 주소지
  FROM TB_STUDENT
 ORDER BY 1;

-- 2번
-- 휴학중인 학생들의 이름과 주민번호를 나이가 적은 순서로 
-- 화면에 출력하시오
SELECT 
       STUDENT_NAME
     , STUDENT_SSN
  FROM TB_STUDENT
 WHERE ABSENCE_YN = 'Y'
 ORDER BY STUDENT_SSN DESC;

-- 3번
-- 주소지가 강원도나 경기도인 학생들 중 1900년대 학번을 
-- 가진 학생들의 이름과 학번, 주소를 이름의 오름차순으로 화면에 출력하시오.
-- 단, 출력헤더에는 "학생이름", "학번", "거주지 주소"가 출력되도록 한다.
SELECT 
       STUDENT_NAME "학생이름"
     , STUDENT_NO 학번 
     , STUDENT_ADDRESS "거주지 주소"
  FROM TB_STUDENT
 WHERE STUDENT_NO LIKE '9%'
   AND (STUDENT_ADDRESS LIKE '경기도%'
    OR STUDENT_ADDRESS LIKE '강원도%')
 ORDER BY 1;

-- 4번
-- 현재 법학과 교수 중 가장 나이가 많은 사람부터 이름을 확인할 수 있는 SQL 문장을 작성하시오.
-- (법학과의 '학과 코드'는 학과 테이블을 조회해서 찾아 내도록 하자)
-- ANSI
SELECT 
       PROFESSOR_NAME
     , PROFESSOR_SSN
  FROM TB_PROFESSOR
  JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
 WHERE DEPARTMENT_NAME = '법학과'
 ORDER BY 2;
-- ORACLE
SELECT 
       P.PROFESSOR_NAME
     , P.PROFESSOR_SSN
  FROM TB_PROFESSOR P
     , TB_DEPARTMENT D
 WHERE P.DEPARTMENT_NO = D.DEPARTMENT_NO
   AND D.DEPARTMENT_NAME = '법학과'
 ORDER BY 2;

-- 5번
-- 2004년 2학기에 'C3118100' 과목을 수강한 학생들의 학점을 조회하려고 한다. 학점이 높은 학생부터 표시하고,
-- 학점이 같으면 학번이 낮은 학생부터 표시하는 구문을 작성해 보시오.
SELECT 
       STUDENT_NO
     , TO_CHAR(POINT,'9.00') POINT
  FROM TB_GRADE
 WHERE TERM_NO = '200402'
   AND CLASS_NO = 'C3118100'
 ORDER BY POINT DESC, STUDENT_NO;

-- 6번
-- 학생 번호, 학생 이름, 학과 이름을 학생 이름으로 오름차순 정렬하여 출력하는 SQL문을 작성하시오.
-- 워크북 결과 값이 학생이름으로 오름차순 정렬 되어 있지 않아서 다른 순서를 보임
-- ANSI
SELECT 
       STUDENT_NO
     , STUDENT_NAME
     , DEPARTMENT_NAME
  FROM TB_STUDENT
  JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
 ORDER BY 2;
-- ORACLE
SELECT 
       S.STUDENT_NO
     , S.STUDENT_NAME
     , D.DEPARTMENT_NAME
  FROM TB_STUDENT S
     , TB_DEPARTMENT D
 WHERE S.DEPARTMENT_NO = D.DEPARTMENT_NO
 ORDER BY 2;

-- 7번
-- 춘 기술대학교의 과목 이름과 과목의 학과 이름을 출력하는 SQL문장을 작성하시오.
-- ANSI
SELECT 
       CLASS_NAME
     , DEPARTMENT_NAME
  FROM TB_CLASS
  JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

-- ORACLE
SELECT 
       C.CLASS_NAME
     , D.DEPARTMENT_NAME
  FROM TB_CLASS C
     , TB_DEPARTMENT D
 WHERE C.DEPARTMENT_NO = D.DEPARTMENT_NO;

-- 8번
-- 과목별 교수 이름을 찾으려고 한다. 과목 이름과 교수 이름을 출력하는 SQL문을 작성하시오.
-- 결과 행의 수는 동일하나 정렬 기준이 없어 다른 순서를 보임

-- ANSI
SELECT 
       CLASS_NAME
     , PROFESSOR_NAME
  FROM TB_CLASS
  JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
  JOIN TB_PROFESSOR USING(PROFESSOR_NO);

-- ORACLE
SELECT  
       C.CLASS_NAME
     , P.PROFESSOR_NAME  
  FROM TB_CLASS C
     , TB_CLASS_PROFESSOR CP
     , TB_PROFESSOR P
 WHERE C.CLASS_NO = CP.CLASS_NO
   AND CP.PROFESSOR_NO = P.PROFESSOR_NO;

-- 9번
-- 8번의 결과 중 '인문 사회' 계열에 속한 과목의 교수 이름을 찾으려고 한다.
-- 이에 해당하는 과목 이름과 교수 이름을 출력하는 SQL문을 작성하시오.
-- 결과 행의 수는 동일하나 정렬 기준이 없어 다른 순서를 보임
-- ANSI
SELECT 
       C.CLASS_NAME
     , P.PROFESSOR_NAME
  FROM TB_CLASS C
  JOIN TB_CLASS_PROFESSOR CP USING(CLASS_NO)
  JOIN TB_PROFESSOR P USING(PROFESSOR_NO)
  JOIN TB_DEPARTMENT D ON (P.DEPARTMENT_NO = D.DEPARTMENT_NO)
 WHERE CATEGORY = '인문사회';

-- ORACLE
SELECT 
       C.CLASS_NAME
     , P.PROFESSOR_NAME
  FROM TB_CLASS C
     , TB_CLASS_PROFESSOR CP
     , TB_PROFESSOR P
     , TB_DEPARTMENT D
 WHERE C.CLASS_NO = CP.CLASS_NO 
   AND CP.PROFESSOR_NO = P.PROFESSOR_NO
   AND P.DEPARTMENT_NO = D.DEPARTMENT_NO
   AND CATEGORY = '인문사회';
